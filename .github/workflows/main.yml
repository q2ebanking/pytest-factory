# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: pytest-factory

on: [pull_request]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest bandit
        if [ -f dev_requirements.txt ]; then pip install -r dev_requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Archive test results
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: test_reports/Test_Report.html
    - name: Create code coverage results summary
      run: |
          python -m pytest | tee | sed -n '/coverage: platform/, $p' > test_reports/summary.txt
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: test-coverage-report
        path: test_reports/summary.txt 
    - name: Run Bandit for security checks
      run: |
        bandit -r pytest_factory